version: "3.7"

services:
  reverse-proxy:
    image: traefik:2.3
    restart: always
    ports: [443:443]
    command: --api.insecure=true --providers.docker
    volumes:
      # Configuration file for traefik
      - ./install/traefik.yml:/etc/traefik/traefik.yml
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.api.rule=Host(`$CHOST`)"
      - "traefik.http.routers.api.entrypoints=dashboard"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.api.service=api@internal"
    # environment:
    # networks:
    #  - internal
    #  - web

  cells:
    image: pydio/cells:latest
    restart: unless-stopped
    expose: [8080]
    environment:
      - CELLS_WORKING_DIR=/var/cells
      - CELLS_INSTALL_YAML=/pydio/config/install.yml
      #- CELLS_BIND=0.0.0.0:80
      # CELLS_EXTERNAL=localhost
      # CELLS_NO_SSL=1
    volumes:
      - "workingdir:/var/cells"
      - "./data:/var/cells/data"
      - "./config:/pydio/config"
    depends_on:
      - mysql
    labels:
      - "traefik.http.routers.cells.rule=Host(`$CHOST`)"
      - "traefik.http.routers.cells.entrypoints=web"
  #      - "traefik.http.routers.cells.tls.certresolver=sample"
  #	These entries might be useful for gRPC in cells	2
  #- "traefik.tcp.routers.cells.rule=HostSNI(`${DOMAIN_NAME}`)"
  #- "traefik.tcp.routers.cells.entrypoints=websecure"
  #- "traefik.tcp.routers.cells.tls.passthrough=true"
  #command: ["cells", "start", "--log=production"]

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: P@ssw0rd
      MYSQL_DATABASE: cells
      MYSQL_USER: pydio
      MYSQL_PASSWORD: pydio
    volumes:
      - "mysqldir:/var/lib/mysql"
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci]

volumes:
  workingdir: {}
  mysqldir: {}
